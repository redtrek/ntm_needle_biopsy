\doxysection{/home/redtrek/\+NTM/ntm\+\_\+needle\+\_\+biopsy/code/biopsy\+\_\+needle/src/include/config.h File Reference}
\hypertarget{config_8h}{}\label{config_8h}\index{/home/redtrek/NTM/ntm\_needle\_biopsy/code/biopsy\_needle/src/include/config.h@{/home/redtrek/NTM/ntm\_needle\_biopsy/code/biopsy\_needle/src/include/config.h}}


This holds the macros for I2C device addresses, general debug and timing values, control abstractions, and ADC power calculations.  


This graph shows which files directly or indirectly include this file\+:
% FIG 0
\doxysubsubsection*{Macros}
\begin{DoxyCompactItemize}
\item 
\Hypertarget{config_8h_a7dfa2c4cfbfcba36416046052e7943e8}\label{config_8h_a7dfa2c4cfbfcba36416046052e7943e8} 
\#define {\bfseries OLED\+\_\+\+ADDR}~0x3C
\item 
\Hypertarget{config_8h_ac1339fa84c70a1e0606d8d3362c993ee}\label{config_8h_ac1339fa84c70a1e0606d8d3362c993ee} 
\#define {\bfseries INA219\+\_\+\+ADDR}~0x40
\item 
\Hypertarget{config_8h_ab8af39ec9ea4179e1236663f82e6be92}\label{config_8h_ab8af39ec9ea4179e1236663f82e6be92} 
\#define {\bfseries FX29\+\_\+\+ADDR}~0x28
\item 
\Hypertarget{config_8h_a0427c5ee0151d36a621ea2bbbcc33b80}\label{config_8h_a0427c5ee0151d36a621ea2bbbcc33b80} 
\#define {\bfseries debounce\+\_\+us}~100000
\item 
\Hypertarget{config_8h_ac6f3299722b682ead61165a15c392922}\label{config_8h_ac6f3299722b682ead61165a15c392922} 
\#define {\bfseries hold\+\_\+us}~3000000
\begin{DoxyCompactList}\small\item\em Hold \mbox{[}STATE\mbox{]} for 3 sec to enter ZERO state. \end{DoxyCompactList}\item 
\Hypertarget{config_8h_ac10c5e664055ed80b487406ea89b6e72}\label{config_8h_ac10c5e664055ed80b487406ea89b6e72} 
\#define {\bfseries pot\+Iterations}~1000
\item 
\Hypertarget{config_8h_a7e34bd94f3ba8465de287a9663c24b80}\label{config_8h_a7e34bd94f3ba8465de287a9663c24b80} 
\#define {\bfseries debug\+\_\+us}~5000000
\item 
\Hypertarget{config_8h_afce5aaf1a0caf368eaf0db8926a30960}\label{config_8h_afce5aaf1a0caf368eaf0db8926a30960} 
\#define {\bfseries SPIKE\+\_\+\+TIME}~500
\begin{DoxyCompactList}\small\item\em Time in ms used to avoid measuring current spikes during the ZERO state. Without this the ZERO state will exit immediately as it will detect motor startup spikes as collision with the housing. \end{DoxyCompactList}\item 
\Hypertarget{config_8h_a1923668201fdaeaced6d7935492b1a1f}\label{config_8h_a1923668201fdaeaced6d7935492b1a1f} 
\#define {\bfseries CUTOFF\+\_\+\+STALL}~800.\+0f
\begin{DoxyCompactList}\small\item\em Stall current that determines when the ZERO state is complete. If the device detects this current, it will be because it has reached the housing. \end{DoxyCompactList}\item 
\#define {\bfseries MOTOR\+\_\+\+FW}~1
\item 
\#define {\bfseries MOTOR\+\_\+\+BW}~0
\item 
\#define {\bfseries MOTOR\+\_\+\+ON}~255
\begin{DoxyCompactList}\small\item\em Maximum PWM value for motor. \end{DoxyCompactList}\item 
\#define {\bfseries MOTOR\+\_\+\+OFF}~0
\begin{DoxyCompactList}\small\item\em Minimum PWM value for motor. \end{DoxyCompactList}\item 
\#define {\bfseries NTM\+\_\+\+MAX}(A,  B)~((A) $>$= (B) ? (A) \+: (B))
\begin{DoxyCompactList}\small\item\em Calculates the bigger value between A and B using operator. Essentially\+: if (A) \texorpdfstring{$>$}{>}= (B) return A. Else return B. \end{DoxyCompactList}\item 
\#define {\bfseries NTM\+\_\+\+MIN}(A,  B)~((A) $<$= (B) ? (A) \+: (B))
\begin{DoxyCompactList}\small\item\em Calculates the smaller value between A and B using operator. Essentially\+: if (A) \texorpdfstring{$<$}{<}= (B) return A. Else return B. \end{DoxyCompactList}\item 
\#define {\bfseries BAT\+\_\+\+MAX\+\_\+\+ADC}~((int)(0.\+5 + (4095/3.\+3) \texorpdfstring{$\ast$}{*} (4.\+2/2)))
\begin{DoxyCompactList}\small\item\em Represents the battery\textquotesingle{}s max capacity from the perspective of the microcontroller. This code maps the battery\textquotesingle{}s voltage to the ADC module value. The battery\textquotesingle{}s "{}maximum charge"{} is 4.\+2 V which is too much for the pins to handle so we halve it using a voltage divider. Therefore, when the battery is at maximum the microcontroller pin recieves 2.\+1 V. We then map this to the 12 bit ADC value. There are 12 bits to represent the voltage so 4096 corresponding values (inclusive of 0) with a maximum of 3.\+3 V recievable by the pin. When we multiply these to values together we are figuring out what the ADC value of the battery is at maximum charge (4.\+2 V / 2) 0.\+5 is just a value to round this result to the nearest whole integer. \end{DoxyCompactList}\item 
\#define {\bfseries BAT\+\_\+\+MIN\+\_\+\+ADC}~((int)(0.\+5 + (4095/3.\+3) \texorpdfstring{$\ast$}{*} (3.\+2/2)))
\begin{DoxyCompactList}\small\item\em Represents the battery\textquotesingle{}s min capacity from the perspective of the microcontroller. This code maps the battery\textquotesingle{}s voltage to the ADC module value. The battery\textquotesingle{}s "{}minimum charge"{} is 3.\+2 V. To be consistent with what we did for the maximum voltage we halve it using a voltage divider. Therefore, when the battery is at maximum the microcontroller pin recieves 1.\+6 V. We then map this to the 12 bit ADC value. There are 12 bits to represent the voltage so 4096 corresponding values (inclusive of 0) with a maximum of 3.\+3 V recievable by the pin. When we multiply these to values together we are figuring out what the ADC value of the battery is at maximum charge (3.\+2 V / 2) 0.\+5 is just a value to round this result to the nearest whole integer. \end{DoxyCompactList}\item 
\#define {\bfseries BAT\+\_\+\+ADC\+\_\+\+PER}~(100.\+0 / (\mbox{\hyperlink{group__BatteryMacros_ga7703a5d829fb6d1223ad111a9474fa9b}{BAT\+\_\+\+MAX\+\_\+\+ADC}} -\/ \mbox{\hyperlink{group__BatteryMacros_gad380f4a571d5444566336f067dfb7b01}{BAT\+\_\+\+MIN\+\_\+\+ADC}}))
\begin{DoxyCompactList}\small\item\em Looks strange out of context. Used to calculate the batter capacity i.\+e. (Current Battery Value -\/ BAT\+\_\+\+MIN\+\_\+\+ADC) \texorpdfstring{$\ast$}{*} BAT\+\_\+\+ADC\+\_\+\+PER = \% Capacity. \end{DoxyCompactList}\item 
\#define {\bfseries SEC\+\_\+\+US}~1000000
\begin{DoxyCompactList}\small\item\em 1 Second in microseconds. \end{DoxyCompactList}\end{DoxyCompactItemize}


\doxysubsection{Detailed Description}
This holds the macros for I2C device addresses, general debug and timing values, control abstractions, and ADC power calculations. 

\begin{DoxyAuthor}{Author}
Thomas Chang 
\end{DoxyAuthor}
\begin{DoxyVersion}{Version}
0.\+1 
\end{DoxyVersion}
\begin{DoxyDate}{Date}
2025-\/05-\/06
\end{DoxyDate}
\begin{DoxyCopyright}{Copyright}
Copyright (c) 2025 
\end{DoxyCopyright}
